class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        res = []
        cols = set()
        diag1 = set()
        diag2 = set()
        board = [-1] * n
        def backtrack(r):
            if r == n:
                sol = []
                for i in range(n):
                    row = ['.']* n
                    row[board[i]] = 'Q'
                    sol.append(''.join(row))
                res.append(sol)
                return
            for c in range(n):
                if c in cols or (r-c) in diag1 or (r+c) in diag2:
                    continue
                board[r] = c
                cols.add(c)
                diag1.add(r-c)
                diag2.add(r+c)
                backtrack(r + 1)
                board[r] = -1
                cols.remove(c)
                diag1.remove(r-c)
                diag2.remove(r+c)
        backtrack(0)
        return res
